{"version":3,"sources":["firebase/firebase.js","redux/user/user.actions.js","redux/user/user.operations.js","pages/Home/Home.page.jsx","redux/comment/comment.actions.js","redux/comment/comment.selector.js","components/CommentListItem/CommentListItem.component.jsx","components/CommentList/CommentList.component.jsx","redux/comment/comment.operations.js","components/IconLabelButton/IconLabelButton.component.jsx","components/InputArea/InputArea.component.jsx","pages/Chat/Chat.page.jsx","components/FormInput/FormInput.component.jsx","components/LoginInputArea/LoginInputArea.component.jsx","pages/Login/Login.page.jsx","components/SignupInputArea/SignupInputArea.component.jsx","pages/Signup/Signup.page.jsx","components/ButtonAppBar/ButtonAppBar.component.jsx","components/Footer/Footer.component.jsx","App.js","serviceWorker.js","redux/comment/comment.reducer.js","redux/user/user.reducer.js","redux/root-reducer.js","redux/store.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","firestore","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup","userActionTypes","userLoginSignup","user","type","payload","createUserProfileDocument","userAuth","userName","a","userRef","doc","uid","get","exists","email","createdAt","Date","set","console","log","message","createNewAccountWithEmail","password","dispath","getState","createUserWithEmailAndPassword","userInfo","authId","isLogin","Home","props","className","onClick","history","push","commentActionTypes","commentListSetUp","comments","addNewComment","comment","getCommentList","createSelector","state","commentList","CommentListItem","commentNo","date","time","CommentList","topic","classNameForBackgroundImage","dispatch","useDispatch","useSelector","useEffect","collectionId","collectionRef","collection","orderBy","then","snapshot","forEach","data","obj","document","querySelector","scrollTop","scrollHeight","map","key","useStyles","makeStyles","theme","button","margin","spacing","IconLabelButton","classes","Button","variant","color","style","background","endIcon","icon","Icon","click","text","InputArea","newCommentNo","length","useState","setUserName","setMessage","setCommentNo","placeholder","onChange","event","target","value","required","preventDefault","sendMessage","sendUserName","getMonth","getDate","getFullYear","hours","getHours","mins","getMinutes","add","Chat","match","params","FormInput","handleChange","label","otherProps","SignIn","userCredentials","setCredentials","handleSubmit","signInWithEmailAndPassword","name","onSubmit","Login","useHistory","faHandPointLeft","Signup","confirmPass","alert","root","flexGrow","position","width","zIndex","menuButton","marginRight","title","fontFamily","fontWeight","fontSize","ButtonAppBar","headerText","setheaderText","listen","location","pathname","slice","lastIndexOf","AppBar","Toolbar","IconButton","edge","aria-label","cursor","Typography","signOut","Footer","href","faLinkedin","faGithub","faMailBulk","App","unsubscribeFromAuth","onAuthStateChanged","onSnapshot","snapShot","id","exact","path","component","Boolean","window","hostname","INITIAL_STATE","commentReducer","action","userReducer","rootReducer","combineReducers","middlewares","thunk","store","createStore","applyMiddleware","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.9b3732dd.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\n\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\n\nvar firebaseConfig = {\napiKey: \"AIzaSyCIWtOYcNVbkFSc5zeTl1OD5ipu2NPmwiM\",\nauthDomain: \"chat-app-8976e.firebaseapp.com\",\ndatabaseURL: \"https://chat-app-8976e.firebaseio.com\",\nprojectId: \"chat-app-8976e\",\nstorageBucket: \"chat-app-8976e.appspot.com\",\nmessagingSenderId: \"622522794289\",\nappId: \"1:622522794289:web:a089a4b8f033367ac67010\",\nmeasurementId: \"G-Y5ZTFZ215Q\"\n};\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n// firebase.analytics();\n\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\n\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({ prompt: \"select_account\" });\n\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);","export const userActionTypes = {\n  USER_LOGIN_SIGNUP: \"USER_LOGIN_SIGNUP\",\n  USER_LOGOUT: \"USER_LOGOUT\",\n  USER_INITIALIZE: \"USER_INITIALIZE\",\n};\n\nexport const userInitialize = () => ({\n  type: userActionTypes.USER_INITIALIZE,\n});\n\nexport const userLoginSignup = (user) => ({\n  type: userActionTypes.USER_LOGIN_SIGNUP,\n  payload: user\n});\n\nexport const userLogout = () => ({\n  type: userActionTypes.USER_LOGIN_SIGNUP,\n});","import { userLoginSignup, userLogout } from './user.actions';\n\nimport { firestore, auth } from \"../../firebase/firebase\";\n\n\nexport const createUserProfileDocument = async (userAuth, userName) => {\n  if (!userAuth) return;\n\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n\n  const snapShot = await userRef.get();\n\n  if (!snapShot.exists) {\n    const { email } = userAuth;\n    const createdAt = new Date();\n\n    try {\n      await userRef.set({\n        email,\n        createdAt,\n        userName,\n      });\n    } catch (error) {\n      console.log(\"error creating user\", error.message);\n    }\n  }\n  return userRef;\n};\n\nexport const createNewAccountWithEmail = (userName, email, password) => {\n    return async (dispath, getState) => {\n        try {\n\n          const { user } = await auth.createUserWithEmailAndPassword(\n            email,\n            password\n          );\n\n          await createUserProfileDocument(user, userName);\n\n          const userInfo = {\n            userName: userName,\n            authId: user.uid,\n            isLogin: true,\n          };\n\n          dispath(userLoginSignup(userInfo));\n        } catch(error) {\n            console.log(error)\n        }\n    }\n};\n","import React from 'react';\n\nimport { Link } from 'react-router-dom'\n\nimport './Home.styles.scss';\n\nconst Home = (props) => {\n    return (\n      <div className=\"homePageDiv\">\n        <div className=\"homePageBody\">\n          <h2>Choose the Topic</h2>\n          <p>You want to talk about</p>\n          <ul>\n            <li\n              onClick={() =>\n                props.history.push(\"/redux-exercise/chat/greeting\")\n              }\n              className=\"topicGreeting\"\n            >\n              <span>Greeting</span>\n            </li>\n            <li\n              onClick={() => props.history.push(\"/redux-exercise/chat/food\")}\n              className=\"topicFood\"\n            >\n              <span>Food</span>\n            </li>\n            <li\n              onClick={() => props.history.push(\"/redux-exercise/chat/movie\")}\n              className=\"topicMovie\"\n            >\n              <span>Movie</span>\n            </li>\n            <li\n              onClick={() =>\n                props.history.push(\"/redux-exercise/chat/programming\")\n              }\n              className=\"topicProgramming\"\n            >\n              <span>Programming</span>\n            </li>\n            <li\n              onClick={() => props.history.push(\"/redux-exercise/chat/outdoor\")}\n              className=\"topicOutdoor\"\n            >\n              <span>Outdoor Activity</span>\n            </li>\n            <li\n              onClick={() =>\n                props.history.push(\"/redux-exercise/chat/traveling\")\n              }\n              className=\"topicTraveling\"\n            >\n              <span>Traveling</span>\n            </li>\n            <li\n              onClick={() => props.history.push(\"/redux-exercise/chat/school\")}\n              className=\"topicSchool\"\n            >\n              <span>School</span>\n            </li>\n          </ul>\n        </div>\n      </div>\n    );\n}\n\nexport default Home;","export const commentActionTypes = {\n  COMMENTLIST_SETUP: \"COMMENTLIST_SETUP\",\n  ADD_NEWCOMMENT: \"ADD_NEWCOMMENT\",\n};\n\nexport const commentListSetUp = (comments) => ({\n  type: commentActionTypes.COMMENTLIST_SETUP,\n  payload: comments\n});\n\nexport const addNewComment = (comment) => ({\n  type: commentActionTypes.ADD_NEWCOMMENT,\n  payload: comment\n});","import { createSelector } from 'reselect';\n\nconst commentsSelector = (state) => state.comments;\n\nexport const getCommentList = createSelector(\n    [commentsSelector],\n    state => state.commentList\n)","import React from 'react';\n\nconst CommentListItem = (props) => {\n    const comment = props.comment;\n\n    return (\n      <li>\n        <p className=\"commentData\">\n          <span className=\"commentNo\">No.{comment.commentNo}</span>\n          <span className=\"commentName\">{comment.userName}</span>\n          <span className=\"commentDate\">{comment.date}</span>\n          <span className=\"commentTime\">{comment.time}</span>\n        </p>\n        <div className=\"commentMessage\">\n          <p>{comment.message}</p>\n        </div>\n      </li>\n    );\n}\n\nexport default CommentListItem;\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { commentsInitiate } from '../../redux/comment/comment.operations.js';\nimport { getCommentList } from '../../redux/comment/comment.selector.js';\n\nimport CommentListItem from '../CommentListItem/CommentListItem.component';\n\nimport './CommentList.styles.scss';\n\nconst CommentList = (props) => {\n    const topic = props.topic;\n\n    const classNameForBackgroundImage = topic + \"BackGround\";\n\n    const dispatch = useDispatch();\n    const state = useSelector((state) => state);\n    let commentList = getCommentList(state);\n\n    useEffect(() => {\n      dispatch(commentsInitiate(\"chat-\" + topic));\n      // console.log(topic)\n      // dispatch(commentsInitiate(\"chat-greeting\"));\n    //   console.log(commentList);\n    },[]);\n\n    useEffect(()=>{\n        const obj = document.querySelector(\".commentListWrapper\");\n        obj.scrollTop = obj.scrollHeight;\n        console.log(commentList);\n    }, [commentList])\n\n    return (\n      <div className={\"commentListWrapper\" + \" \" + classNameForBackgroundImage}>\n        <ul className=\"commentList\">{\n            commentList.map(comment => \n                <CommentListItem key={comment.commentNo} comment={comment} />\n            )\n        }</ul>\n      </div>\n    );\n}\n\nexport default CommentList;","import { commentListSetUp, addNewComment } from './comment.actions';\n\nimport { firestore } from '../../firebase/firebase'\n\nexport const commentsInitiate = (collectionId) => {\n    return async (dispatch, getState) => {\n      const collectionRef = firestore.collection(collectionId);\n      let comments = [];\n\n      await collectionRef\n        .orderBy(\"commentNo\")\n        .get()\n        .then((snapshot) => {\n          snapshot.forEach((doc) => {\n            const comment = doc.data();\n            //   console.log(comment);\n            comments.push(comment);\n          });\n        });\n\n    //   console.log(comments);\n      dispatch(commentListSetUp(comments));\n    }\n}\n\nexport const addCommentToDatabase = (collectionId, comment) => {\n    return async (dispatch, getState) => {\n      const collectionRef = firestore.collection(collectionId);\n\n      await collectionRef.add(comment)\n\n      dispatch(addNewComment(comment));\n    }\n}","import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Icon from \"@material-ui/core/Icon\";\n\nconst useStyles = makeStyles((theme) => ({\n  button: {\n    margin: theme.spacing(1),\n  },\n}));\n\nexport default function IconLabelButton(props) {\n  const classes = useStyles();\n\n  return (\n    <Button\n      variant=\"contained\"\n      color=\"primary\"\n      style={{ background: \"#100c08\" }}\n      className={classes.button}\n      endIcon={props.icon !== null ? <Icon>{props.icon}</Icon> : null}\n      onClick={props.click}\n    >\n      {props.text}\n    </Button>\n  );\n}\n","import React, {useState, useEffect} from 'react';\nimport IconLabelButtons from \"../IconLabelButton/IconLabelButton.component\";\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addCommentToDatabase } from '../../redux/comment/comment.operations.js';\n\nimport './inputArea.styles.scss';\n\nconst InputArea = (props) => {\n    const dispatch = useDispatch();\n    const comments = useSelector(state => state.comments);\n    let newCommentNo = comments.commentList.length + 1;\n\n    const topic = props.topic;\n    \n    if (newCommentNo < 10) {\n      newCommentNo = \"000\" + newCommentNo;\n    } else if (newCommentNo < 100) {\n      newCommentNo = \"00\" + newCommentNo;\n    } else if (newCommentNo < 1000) {\n      newCommentNo = \"0\" + newCommentNo;\n    } \n    \n    const [userName, setUserName] = useState(\"No Name\");\n    const [message, setMessage] = useState(\"\");\n    const [commentNo, setCommentNo] = useState(newCommentNo);\n\n    const nameChangeHandler = (event) => {\n        setUserName(event.target.value)\n    }\n    const messageChangeHandler = (event) => {\n        setMessage(event.target.value)\n    }\n    const submitComment = (event) => {\n      event.preventDefault();\n\n      // if (message === \"\") {\n      //     alert(\"Message Area is required!!!\")\n      //     return;\n      // }\n\n      let sendMessage = message;\n      let sendUserName = userName;\n\n      if (sendMessage === \"\") {\n        sendMessage = \"No Message\";\n      }\n      if (sendUserName === \"\") {\n        sendUserName = \"No Name\";\n      }\n\n      const month = new Date().getMonth() + 1;\n      const day = new Date().getDate();\n      const year = new Date().getFullYear();\n\n      const date = month + \"/\" + day + \"/\" + year;\n\n      const hours = new Date().getHours();\n      const mins = new Date().getMinutes() < 10\n              ? \"0\" + new Date().getMinutes()\n              : new Date().getMinutes()\n      \n      const time = hours + \":\" + mins\n\n      dispatch(\n        addCommentToDatabase(\n            \"chat-\" + topic,\n            {\n            commentNo: commentNo,\n            date: date,\n            time: time,\n            userName: sendUserName,\n            message: sendMessage,\n            }\n        )\n      );\n      // setUserName(\"No Name\");\n      setMessage(\"\");\n    };\n\n    useEffect(()=>{\n        setCommentNo(newCommentNo);\n    },[comments])\n\n    return (\n      <div className=\"inputAreaDiv\">\n        <form>\n          <input\n            type=\"text\"\n            placeholder=\"Your Name\"\n            // value={userName}\n            onChange={nameChangeHandler}\n          />\n          <textarea\n            placeholder=\"Write message\"\n            onChange={messageChangeHandler}\n            value={message}\n            required\n          />\n          <IconLabelButtons text=\"send\" icon=\"send\" type=\"submit\" click={submitComment} />\n        </form>\n      </div>\n    );\n}\n\nexport default InputArea;\n\n          // <button type=\"submit\" onClick={submitComment}>\n          //   SUBMIT\n          // </button>;\n","import React from \"react\";\n\nimport \"./Chat.styles.scss\";\n\nimport CommentList from \"../../components/CommentList/CommentList.component.jsx\";\nimport InputArea from \"../../components/InputArea/InputArea.component.jsx\";\n\nconst Chat = (props) => {\n    const topic = props.match.params.topic;\n    // console.log(topic);\n    \n    return (\n      <div className=\"Chat\">\n        <div className=\"pageStyle\">\n          <CommentList topic={topic} />\n          <InputArea topic={topic} />\n        </div>\n      </div>\n    );\n}\n\nexport default Chat;\n","import React from \"react\";\n\nimport \"./FormInput.styles.scss\";\n\nconst FormInput = ({ handleChange, label, ...otherProps }) => (\n  <div className=\"group\">\n    <input className=\"form-input\" onChange={handleChange} {...otherProps} />\n    {label ? (\n      <label\n        className={`${\n          otherProps.value.length ? \"shrink\" : \"\"\n        } form-input-label`}\n      >\n        {label}\n      </label>\n    ) : null}\n  </div>\n);\n\nexport default FormInput;\n","import React, { useState } from \"react\";\n\nimport FormInput from \"../FormInput/FormInput.component\";\nimport IconLabelButton from '../IconLabelButton/IconLabelButton.component';\n\nimport { auth } from \"../../firebase/firebase\";\n\n\nimport \"./LoginInputArea.styles.scss\";\n\nconst SignIn = () => {\n  const [userCredentials, setCredentials] = useState({\n    email: \"\",\n    password: \"\",\n  });\n\n  const { email, password } = userCredentials;\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n\n    try {\n      await auth.signInWithEmailAndPassword(email, password);\n      setCredentials({\n        email: \"\",\n        password: \"\",\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleChange = (event) => {\n    const { value, name } = event.target;\n\n    setCredentials({ ...userCredentials, [name]: value });\n  };\n\n  return (\n    <div className=\"loginInputArea\">\n      <form onSubmit={handleSubmit}>\n        <FormInput\n          name=\"email\"\n          type=\"email\"\n          value={email}\n          handleChange={handleChange}\n          label=\"Email\"\n          required\n        />\n        <FormInput\n          name=\"password\"\n          type=\"password\"\n          value={password}\n          handleChange={handleChange}\n          label=\"Password\"\n          required\n        />\n\n        <div className=\"buttons\">\n          <IconLabelButton text=\"Login\" icon={null} />\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default SignIn;\n\n        //   <CustomButton type=\"submit\"> Sign in </CustomButton>\n        //   <CustomButton type=\"button\" onClick={signInWithGoogle} isGoogleSignIn>\n        //     {\" \"}\n        //     Sign in with Google{\" \"}\n        //   </CustomButton>\n","import React from 'react';\n\nimport LoginInputArea from '../../components/LoginInputArea/LoginInputArea.component';\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faHandPointLeft } from \"@fortawesome/free-solid-svg-icons\";\n\nimport { signInWithGoogle } from \"../../firebase/firebase\";\n\nimport { useHistory } from 'react-router-dom';\n\n\n\nimport \"./Login.styles.scss\";\n\nconst Login = () => {\n    const history = useHistory();\n\n\n    return (\n      <div className=\"loginPageDiv\">\n        <div className=\"loginPageBody\">\n          <h2>Login</h2>\n          <p>\n            Login with your Email Address or\n            <br />\n            <span className=\"googleAccount\" onClick={signInWithGoogle}>\n              Google Account\n            </span>\n            &nbsp;\n            <FontAwesomeIcon icon={faHandPointLeft} />\n          </p>\n          <p>\n            If you don't have your account yet,\n            <br />\n            <span\n              className=\"pleaseSignup\"\n              onClick={() => history.push(\"/redux-exercise/signup\")}\n            >\n              please Signup\n            </span>\n            &nbsp;\n            <FontAwesomeIcon icon={faHandPointLeft} />\n          </p>\n          <LoginInputArea />\n        </div>\n      </div>\n    );\n}\n\nexport default Login;","import React, { useState, useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\"\n\nimport FormInput from \"../FormInput/FormInput.component\";\nimport IconLabelButton from '../IconLabelButton/IconLabelButton.component';\n\nimport { createNewAccountWithEmail } from '../../redux/user/user.operations';\n\n\nimport \"./SigninInputArea.styles.scss\";\n\nconst Signup = () => {\n  const [userCredentials, setCredentials] = useState({\n    userName: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPass: \"\"\n  });\n\n  const dispatch = useDispatch();\n\n  const { userName, email, password, confirmPass } = userCredentials;\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n\n    if (!userName || !email || !password || !confirmPass) {\n      alert(\"Please fill in all fields\");\n      return;\n    }\n\n    if ( password.length < 6 ) {\n      alert(\"Password should be 6 or more characters\");\n      return;\n    }\n\n    if (password !== confirmPass) {\n      alert(\"Passwords don't match\");\n      return;\n    }\n\n    try {\n      await dispatch(createNewAccountWithEmail(userName, email, password));\n      setCredentials({\n        userName: \"\",\n        email: \"\",\n        password: \"\",\n        confirmPass: \"\",\n      });\n\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleChange = (event) => {\n    const { value, name } = event.target;\n\n    setCredentials({ ...userCredentials, [name]: value });\n  };\n\n  useEffect(()=> {\n    console.log(userCredentials);\n  })\n\n  return (\n    <div className=\"loginInputArea\">\n      <form>\n        <FormInput\n          name=\"userName\"\n          type=\"text\"\n          value={userName}\n          handleChange={handleChange}\n          label=\"Name\"\n          required\n        />\n        <FormInput\n          name=\"email\"\n          type=\"email\"\n          value={email}\n          handleChange={handleChange}\n          label=\"Email\"\n          required\n        />\n        <FormInput\n          name=\"password\"\n          type=\"password\"\n          value={password}\n          handleChange={handleChange}\n          label=\"Password\"\n          required\n        />\n        <FormInput\n          name=\"confirmPass\"\n          type=\"password\"\n          value={confirmPass}\n          handleChange={handleChange}\n          label=\"Confirm Password\"\n          required\n        />\n\n        <div className=\"buttons\">\n          <IconLabelButton\n            text=\"Signup\"\n            icon={null}\n            click={handleSubmit}\n          />\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default Signup;","import React from 'react';\n\nimport SignupInputArea from '../../components/SignupInputArea/SignupInputArea.component';\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faHandPointLeft } from \"@fortawesome/free-solid-svg-icons\";\n\nimport { signInWithGoogle } from \"../../firebase/firebase\";\n\n\n\nimport \"./Signup.styles.scss\";\n\nconst Signup = () => {\n    return (\n      <div className=\"signupPageDiv\">\n        <div className=\"signupPageBody\">\n          <h2>Signup</h2>\n          <p>\n            Signup with your Email Address or\n            <br />\n            <span className=\"googleAccount\" onClick={signInWithGoogle}>\n              Google Account\n            </span>\n            &nbsp;\n            <FontAwesomeIcon icon={faHandPointLeft} />\n          </p>\n          <SignupInputArea />\n        </div>\n      </div>\n    );\n}\n\nexport default Signup;","import React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\n\nimport { useHistory } from 'react-router-dom';\n\nimport { auth } from '../../firebase/firebase.js';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    position: \"fixed\",\n    width: \"100%\",\n    zIndex: 100\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n    fontFamily: \"'Dancing Script', cursive\",\n    fontWeight: 600,\n    fontSize: \"2rem\"\n  },\n}));\n\nexport default function ButtonAppBar() {\n    const [headerText, setheaderText] = useState(\"Chat Place\");\n\n    const classes = useStyles();\n    const state = useSelector(state => state);\n    const user = state.user.userInfo;\n\n    console.log(user);\n\n    let history = useHistory();\n\n    useEffect(() => {\n      return history.listen((location) => {\n        let topic = location.pathname;\n\n        if (\n          topic === \"/redux-exercise\" ||\n          topic === \"/redux-exercise/\" ||\n          topic === \"/\" ||\n          topic === \"\"\n        ) {\n          topic = \"Chat Place\";\n        } else {\n          topic = topic.slice(topic.lastIndexOf(\"/\") + 1);\n        }\n        console.log(topic);\n        setheaderText(topic);\n      });\n    });\n    \n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\" style={{ background: \"#100c08\" }}>\n        <Toolbar>\n          {headerText !== \"Chat Place\" ? (\n            <IconButton\n              edge=\"start\"\n              className={classes.menuButton}\n              color=\"inherit\"\n              aria-label=\"menu\"\n              onClick={() => history.push(\"/redux-exercise/\")}\n            >\n              <MenuIcon />\n            </IconButton>\n          ) : (\n            <IconButton\n              edge=\"start\"\n              className={classes.menuButton}\n              style={{\n                color: \"#100c08\",\n                cursor: \"inherit\",\n              }}\n              aria-label=\"menu\"\n            >\n              <MenuIcon />\n            </IconButton>\n          )}\n          <Typography variant=\"h6\" className={classes.title}>\n            {headerText}\n          </Typography>\n          { user.isLogin ? (\n            <Button\n              color=\"inherit\"\n              onClick={() => auth.signOut()}\n            >\n              Logout\n            </Button>\n          ) : (\n            <Button\n              color=\"inherit\"\n              onClick={() => history.push(\"/redux-exercise/login\")}\n            >\n              Login\n            </Button>\n          )}\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n","import React from 'react';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faLinkedin, faGithub } from \"@fortawesome/free-brands-svg-icons\";\nimport { faMailBulk } from \"@fortawesome/free-solid-svg-icons\";\n\nimport './Footer.style.scss';\n\nconst Footer = () => {\n    return (\n      <footer className=\"pageFooter\">\n        <div className=\"nameAndCopyDiv\">\n          <p className=\"footerCopyright\">\n            &copy; 2020 Tomohiro Yoshida. All Rights Reserved\n          </p>\n        </div>\n\n        <ul className=\"contactList\">\n          <li className=\"linkedinItem\">\n            <a href=\"https://www.linkedin.com/in/tomohiro-yoshida-a8320816a/\">\n              <FontAwesomeIcon icon={faLinkedin} />\n            </a>\n          </li>\n          <li className=\"githubItem\">\n            <a href=\"https://github.com/TOMO-YOSHI\">\n              <FontAwesomeIcon icon={faGithub} />\n            </a>\n          </li>\n          <li className=\"mailItem\">\n            <a href=\"mailto: tyoshida01@mylangara.ca\">\n              <FontAwesomeIcon icon={faMailBulk} />\n            </a>\n          </li>\n        </ul>\n      </footer>\n    );\n}\n\nexport default Footer;\n\n        //   <p className=\"authorName\">Author: Tomohiro Yoshida</p>\n        //   <p className=\"footerCopyright\">\n        //     &copy; 2020 Chat Place. All Rights Reserved\n        //   </p>\n","import React, {useEffect} from 'react';\nimport './App.css';\nimport { Route, Switch } from \"react-router-dom\";\nimport { useDispatch, useSelector } from 'react-redux'\nimport { auth } from './firebase/firebase';\nimport { createUserProfileDocument } from './redux/user/user.operations';\nimport { userLoginSignup, userInitialize } from './redux/user/user.actions';\n\nimport Home from './pages/Home/Home.page.jsx';\nimport Chat from './pages/Chat/Chat.page.jsx';\nimport Login from './pages/Login/Login.page.jsx';\nimport Signup from './pages/Signup/Signup.page.jsx';\n\nimport ButtonAppBar from './components/ButtonAppBar/ButtonAppBar.component.jsx';\nimport Footer from './components/Footer/Footer.component.jsx'\n\nfunction App() {\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n      const unsubscribeFromAuth = auth.onAuthStateChanged(async (userAuth) => {\n        if (userAuth) {\n          const userRef = await createUserProfileDocument(userAuth);\n          \n          userRef.onSnapshot((snapShot) => {\n            dispatch(\n              userLoginSignup(\n                {\n                  userName: snapShot.data().userName,\n                  authId: snapShot.id,\n                  isLogin: true\n                }\n              )\n            )\n          });\n        } else {\n          dispatch(userInitialize());\n        }\n      });\n      return () => {\n        unsubscribeFromAuth();\n      };\n    }, [userLoginSignup]);\n\n  return (\n    <div className=\"App\">\n      <ButtonAppBar />\n      <Switch>\n        <Route exact path=\"/redux-exercise\" component={Home} />\n        <Route path=\"/redux-exercise/chat/:topic\" component={Chat} />\n        <Route path=\"/redux-exercise/login\" component={Login} />\n        <Route path=\"/redux-exercise/signup\" component={Signup} />\n      </Switch>\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n\n      // <ButtonAppBar />\n      // <div className=\"pageStyle\">\n      //   <CommentList />\n      //   <InputArea />\n      // </div>\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { commentActionTypes } from \"./comment.actions\";\n\nconst INITIAL_STATE = {\n  commentList: [\n    {\n      commentNo: \"0000\",\n      userName: \"TOMO\",\n      date: \"09/22/2020\",\n      time: \"00:00\",\n      message: [\n        // `Welcome to \"Chatting Place\"!!`,\n        // `Hi, I'm Tomo, I developed this chat app!!`,\n      ],\n    },\n    // {\n    //   commentNo: \"0001\",\n    //   userName: \"TOMO\",\n    //   dateAndTime: new Date(),\n    //   message: [\n    //     `Welcome to \"Chatting Place\"!!`,\n    //     `Hi, I'm Tomo, I developed this chat app!!`,\n    //   ],\n    // },\n    // {\n    //   commentNo: \"0002\",\n    //   userName: \"TOMO\",\n    //   dateAndTime: new Date(),\n    //   message: [\n    //     `Please leave your first comment!!`,\n    //   ],\n    // },\n  ],\n};\n\nconst commentReducer = (state = INITIAL_STATE, action) => {\n    switch (action.type) {\n      case commentActionTypes.COMMENTLIST_SETUP:\n        return {\n          ...state,\n          commentList: action.payload,\n        };\n      case commentActionTypes.ADD_NEWCOMMENT:\n        return {\n          ...state,\n          commentList: [...state.commentList, action.payload],\n        };\n      default:\n        return state;\n    }\n}\n\nexport default commentReducer;","import { userActionTypes } from './user.actions';\n\nconst INITIAL_STATE ={\n    userInfo:\n    {\n    userName: \"No Name\",\n    authId: null,\n    isLogin: false\n    }\n}\n\nconst userReducer = (state = INITIAL_STATE, action) => {\n    switch (action.type) {\n        case userActionTypes.USER_LOGIN_SIGNUP:\n            return {\n                ...state,\n                userInfo: action.payload\n            };\n        case userActionTypes.USER_LOGOUT:\n            return INITIAL_STATE;\n        default:\n            return state;\n    }\n}\n\nexport default userReducer;\n\n\n","import { combineReducers } from 'redux';\n\nimport commentReducer from './comment/comment.reducer';\nimport userReducer from './user/user.reducer';\n\n\nexport const rootReducer = combineReducers({\n    comments: commentReducer,\n    user: userReducer\n});\n\n// export default rootReducer;","import { createStore, applyMiddleware } from 'redux';\n\nimport { rootReducer } from './root-reducer';\n\n// import logger from \"redux-logger\";\nimport thunk from \"redux-thunk\";\n\nconst middlewares = [thunk];\n\n\nconst store = createStore(rootReducer, applyMiddleware(...middlewares));\n\nexport { store };","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport { Provider } from 'react-redux';\nimport { store } from './redux/store'\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}