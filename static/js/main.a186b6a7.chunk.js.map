{"version":3,"sources":["firebase/firebase.js","redux/user/user.actions.js","redux/user/user.operations.js","redux/user/user.selector.js","pages/Home/Home.page.jsx","redux/comment/comment.actions.js","redux/comment/comment.selector.js","components/CommentListItem/CommentListItem.component.jsx","redux/comment/comment.operations.js","components/CommentList/CommentList.component.jsx","components/IconLabelButton/IconLabelButton.component.jsx","components/InputArea/InputArea.component.jsx","pages/Chat/Chat.page.jsx","components/FormInput/FormInput.component.jsx","components/LoginInputArea/LoginInputArea.component.jsx","pages/Login/Login.page.jsx","components/SignupInputArea/SignupInputArea.component.jsx","pages/Signup/Signup.page.jsx","pages/Profile/Profile.page.jsx","components/ButtonAppBar/ButtonAppBar.component.jsx","components/Footer/Footer.component.jsx","App.js","serviceWorker.js","redux/comment/comment.utils.js","redux/comment/comment.reducer.js","redux/user/user.reducer.js","redux/root-reducer.js","redux/store.js","index.js","images/no_profile.png"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","firestore","provider","storage","GoogleAuthProvider","setCustomParameters","prompt","userActionTypes","userLoginSignup","user","type","payload","userNameChange","userName","createUserProfileDocument","userAuth","a","userRef","doc","uid","get","exists","email","createdAt","Date","set","userImageUrl","console","log","message","createNewAccountWithEmail","password","dispath","getState","createUserWithEmailAndPassword","loginWithGoogleAccount","signInWithPopup","displayName","snapShot","getUserInfo","createSelector","state","userInfo","Home","props","useState","setUserName","userIsLogin","setUserIsLogin","useSelector","useEffect","unsubscribe","onAuthStateChanged","collection","then","snapshot","data","className","Fragment","onClick","history","push","commentActionTypes","commentListSetUp","comments","modifyComment","comment","getCommentList","commentList","CommentListItem","listItemClassName","editDeletText","seteditDeletText","threadTopic","setThreadTopic","dispatch","useDispatch","useHistory","listen","location","topic","pathname","slice","lastIndexOf","userId","collectionId","collectionRef","newComment","deletedUserName","deletedMessage","isDeleted","deletedAt","id","deleteComment","icon","faTrash","src","NoProfile","alt","commentNo","date","time","CommentList","setCommentList","classNameForBackgroundImage","stateCommentList","orderBy","forEach","onSnapshot","docChanges","change","addNewComment","obj","document","querySelector","scrollTop","scrollHeight","map","key","useStyles","makeStyles","theme","button","margin","spacing","IconLabelButton","classes","Button","variant","color","style","background","endIcon","Icon","click","text","InputArea","newCommentNo","length","setUserId","setMessage","setCommentNo","authId","readOnly","value","placeholder","onChange","event","target","required","preventDefault","sendMessage","sendUserName","getMonth","getDate","getFullYear","getHours","getMinutes","commentedAt","add","Chat","match","params","FormInput","handleChange","label","otherProps","Login","userCredentials","setCredentials","loginHandleSubmit","alert","signInWithEmailAndPassword","isLogin","name","loginWithGoogleAccountBackToHome","setTimeout","faHandPointLeft","Signup","confirmPass","handleSubmit","Profile","setUserInfo","userInfoInStore","htmlFor","accept","update","root","flexGrow","position","width","zIndex","menuButton","marginRight","title","fontFamily","fontWeight","fontSize","ButtonAppBar","headerText","setheaderText","rightSideLink","signOut","justifyContent","faUserCircle","AppBar","Toolbar","IconButton","edge","aria-label","cursor","Typography","Footer","href","faLinkedin","faGithub","class","App","unsubscribeFromAuth","exact","path","component","Boolean","window","hostname","addCommentToList","find","exsistingCommentIndex","findIndex","INITIAL_STATE","commentReducer","action","userReducer","rootReducer","combineReducers","middlewares","thunk","store","createStore","applyMiddleware","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","module","exports"],"mappings":"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","file":"static/js/main.a186b6a7.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\n\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\nimport \"firebase/storage\";\n\nvar firebaseConfig = {\napiKey: \"AIzaSyCIWtOYcNVbkFSc5zeTl1OD5ipu2NPmwiM\",\nauthDomain: \"chat-app-8976e.firebaseapp.com\",\ndatabaseURL: \"https://chat-app-8976e.firebaseio.com\",\nprojectId: \"chat-app-8976e\",\nstorageBucket: \"chat-app-8976e.appspot.com\",\nmessagingSenderId: \"622522794289\",\nappId: \"1:622522794289:web:a089a4b8f033367ac67010\",\nmeasurementId: \"G-Y5ZTFZ215Q\"\n};\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n// firebase.analytics();\n\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nexport const storage = firebase.storage();\n\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({ prompt: \"select_account\" });\n\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);","export const userActionTypes = {\n  USER_LOGIN_SIGNUP: \"USER_LOGIN_SIGNUP\",\n  USER_LOGOUT: \"USER_LOGOUT\",\n  USER_INITIALIZE: \"USER_INITIALIZE\",\n  USERNAME_CHANGE: \"USERNAME_CHANGE\",\n  USER_IMAGE_GET: \"USER_IMAGE_GET\"\n};\n\nexport const userInitialize = () => ({\n  type: userActionTypes.USER_INITIALIZE,\n});\n\nexport const userLoginSignup = (user) => ({\n  type: userActionTypes.USER_LOGIN_SIGNUP,\n  payload: user\n});\n\nexport const userLogout = () => ({\n  type: userActionTypes.USER_LOGIN_SIGNUP,\n});\n\nexport const userNameChange = (userName) => ({\n  type: userActionTypes.USERNAME_CHANGE,\n  payload: userName\n});\n\nexport const userImageGet = (imageUrl) => ({\n  type: userActionTypes.USER_IMAGE_GET,\n  payload: imageUrl,\n});","import { signInWithGoogle } from '../../firebase/firebase';\n\nimport { firestore, auth } from \"../../firebase/firebase\";\n\nimport { userNameChange } from './user.actions';\n\nexport const createUserProfileDocument = async (userAuth, userName) => {\n  if (!userAuth) return;\n\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n\n  const snapShot = await userRef.get();\n\n  if (!snapShot.exists) {\n    const { email } = userAuth;\n    const createdAt = new Date();\n    const userImageUrl =\n      \"https://firebasestorage.googleapis.com/v0/b/chat-app-8976e.appspot.com/o/no_profile.png?alt=media&token=ab1a24c8-e687-4485-915c-e8b3da6d1738\";\n\n    try {\n      await userRef.set({\n        email,\n        createdAt,\n        userName,\n        userImageUrl,\n      });\n    } catch (error) {\n      console.log(\"error creating user\", error.message);\n    }\n  }\n  return userRef;\n};\n\nexport const createNewAccountWithEmail = (userName, email, password) => {\n    return async (dispath, getState) => {\n        try {\n\n          const { user } = await auth.createUserWithEmailAndPassword(\n            email,\n            password\n          );\n\n          await createUserProfileDocument(user, userName);\n\n        //   const userInfo = {\n        //     userName: userName,\n        //     authId: user.uid,\n        //     isLogin: true,\n        //   };\n\n        //   dispath(userLoginSignup(userInfo));\n        } catch(error) {\n            console.log(error)\n        }\n    }\n};\n\nexport const loginWithGoogleAccount = () => {\n    return async (dispath, getState) => {\n        try {\n\n          const { user } = await signInWithGoogle();\n\n          const { uid, displayName, email } = user;\n\n        //   await createUserProfileDocument(user, userName);\n\n        //   console.log(uid, displayName, email);\n\n          if (!user) return;\n\n          const userRef = firestore.doc(`users/${uid}`);\n\n          const snapShot = await userRef.get();\n\n          if (!snapShot.exists) {\n            const createdAt = new Date();\n            const userName = displayName;\n            const userImageUrl =\n              \"https://firebasestorage.googleapis.com/v0/b/chat-app-8976e.appspot.com/o/no_profile.png?alt=media&token=ab1a24c8-e687-4485-915c-e8b3da6d1738\";\n\n\n            await userRef.set({\n              email,\n              createdAt,\n              userName,\n              userImageUrl,\n            });\n          }\n\n          return snapShot;\n\n        } catch(error) {\n            console.log(error)\n        }\n    }\n};\n\nexport const nameUpdateInDatabase = (userName, userId) => {\n  return async (dispath, getState) => {\n    try {\n\n      const userRef = firestore.doc(`users/${userId}`);\n\n      const snapShot = await userRef.update({userName});\n\n      dispath(userNameChange(userName));\n\n      alert(\"Your Name was successfully updated!\")\n\n      return snapShot;\n    } catch (error) {\n      console.log(error);\n    }\n  };\n}\n","import { createSelector } from \"reselect\";\n\nconst userSelector = (state) => state.user;\n\nexport const getUserInfo = createSelector(\n  [userSelector],\n  (state) => state.userInfo\n);\n","import React, { useState, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { getUserInfo } from '../../redux/user/user.selector.js';\n\nimport { auth, firestore } from '../../firebase/firebase'\n\nimport './Home.styles.scss';\n\nconst Home = (props) => {\n  const [userName, setUserName] = useState(\"\");\n  const [userIsLogin, setUserIsLogin] = useState(false);\n  const state = useSelector(state => state);\n  const userInfo = getUserInfo(state);\n\n\n  useEffect(()=>{\n    const unsubscribe = auth.onAuthStateChanged(function async(userAuth) {\n      if (userAuth) {\n        const collectionRef = firestore.collection(\"users\");\n\n        collectionRef\n          .doc(userAuth.uid)\n          .get()\n          .then((snapshot) => setUserName(snapshot.data().userName));\n\n        // setTimeout(() => {\n        // setUserName(userInfo.userName);\n\n        setUserIsLogin(true);\n        // console.log(userAuth.uid);\n        // }, 500);\n      } else {\n        setUserName(\"Vistor\");\n        setUserIsLogin(false);\n        // console.log(userInfo);\n      }\n    });\n\n    return () => {\n      unsubscribe();\n    }\n  }, [userInfo])\n\n  // useEffect(()=>{\n\n  // }, [userInfo])\n\n    return (\n      <div className=\"homePageDiv\">\n        <div className=\"homePageBody\">\n          { !userIsLogin ? (\n            <React.Fragment>\n              <h2>Choose the Topic</h2>\n              <p>You want to talk about</p>\n            </React.Fragment>\n          ) : (\n            <React.Fragment>\n              <p className=\"hiName\">Hi, {userName} !</p>\n              <h2>Choose the Topic</h2>\n              <p>You want to talk about</p>\n            </React.Fragment>\n          )}\n          <ul>\n            <li\n              onClick={() =>\n                props.history.push(\"/redux-exercise/chat/greeting\")\n              }\n              className=\"topicGreeting\"\n            >\n              <span>Greeting</span>\n            </li>\n            <li\n              onClick={() => props.history.push(\"/redux-exercise/chat/food\")}\n              className=\"topicFood\"\n            >\n              <span>Food</span>\n            </li>\n            <li\n              onClick={() => props.history.push(\"/redux-exercise/chat/movie\")}\n              className=\"topicMovie\"\n            >\n              <span>Movie</span>\n            </li>\n            <li\n              onClick={() =>\n                props.history.push(\"/redux-exercise/chat/programming\")\n              }\n              className=\"topicProgramming\"\n            >\n              <span>Programming</span>\n            </li>\n            <li\n              onClick={() => props.history.push(\"/redux-exercise/chat/outdoor\")}\n              className=\"topicOutdoor\"\n            >\n              <span>Outdoor Activity</span>\n            </li>\n            <li\n              onClick={() =>\n                props.history.push(\"/redux-exercise/chat/traveling\")\n              }\n              className=\"topicTraveling\"\n            >\n              <span>Traveling</span>\n            </li>\n            <li\n              onClick={() => props.history.push(\"/redux-exercise/chat/school\")}\n              className=\"topicSchool\"\n            >\n              <span>School</span>\n            </li>\n          </ul>\n        </div>\n      </div>\n    );\n}\n\nexport default Home;","export const commentActionTypes = {\n  COMMENTLIST_SETUP: \"COMMENTLIST_SETUP\",\n  ADD_NEWCOMMENT: \"ADD_NEWCOMMENT\",\n  MODIFY_COMMENT: \"MODIFY_COMMENT\",\n};\n\nexport const commentListSetUp = (comments) => ({\n  type: commentActionTypes.COMMENTLIST_SETUP,\n  payload: comments\n});\n\nexport const addNewComment = (comment) => ({\n  type: commentActionTypes.ADD_NEWCOMMENT,\n  payload: comment\n});\n\nexport const modifyComment = (comment) => ({\n  type: commentActionTypes.MODIFY_COMMENT,\n  payload: comment\n});","import { createSelector } from 'reselect';\n\nconst commentsSelector = (state) => state.comments;\n\nexport const getCommentList = createSelector(\n    [commentsSelector],\n    state => state.commentList\n)","import React, { useState, useEffect } from 'react';\n\nimport { useDispatch } from \"react-redux\";\n\nimport { deleteComment } from '../../redux/comment/comment.operations'\n\nimport { auth } from \"../../firebase/firebase\";\n\nimport './CommentListItem.styles.scss';\n\nimport { useHistory } from \"react-router-dom\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrash } from \"@fortawesome/free-solid-svg-icons\";\nimport NoProfile from '../../images/no_profile.png';\n\n\n\nconst CommentListItem = (props) => {\n  // const [userId, setUserId] = useState(\"\");\n  const [editDeletText, seteditDeletText] = useState(null);\n  const [threadTopic, setThreadTopic] = useState(\"\");\n\n  const dispatch = useDispatch();\n\n  const comment = props.comment;\n\n  const history = useHistory();\n\n  useEffect(() => {\n    const unsubscribe = history.listen((location) => {\n      let topic = location.pathname;\n\n      topic = topic.slice(topic.lastIndexOf(\"/\") + 1);\n      setThreadTopic(\"chat-\" + topic)\n    });\n    unsubscribe();\n  }, [])\n\n\n  // const topic = props.topic;\n  // const userInfo = useSelector((state) => state.user.userInfo);\n\n  // useEffect(() => {\n  //   const unsubscribe = auth.onAuthStateChanged(function (userAuth) {\n  //     if (userAuth) {\n  //       setUserId(userInfo.authId);\n  //       // setUserIsLogin(true);\n  //     } else {\n  //       setUserId(userInfo.authId);\n  //       // setUserIsLogin(false);\n  //     }\n  //   });\n\n  //   return () => {\n  //     unsubscribe();\n  //   };\n  // },[]);\n\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged(function (userAuth) {\n      if (userAuth) {\n        const userId = userAuth.uid;\n        if (comment.userId === userId) {\n          seteditDeletText(\n            <div className=\"editDeleteDiv\">\n              <span\n                onClick={() => {\n                  // console.log(comment);\n                  // console.log(comment.id);\n                  dispatch(deleteComment(threadTopic, comment));\n                }}\n                className=\"editButton\"\n              >\n                Delete&nbsp; &nbsp;\n                <FontAwesomeIcon icon={faTrash} />\n              </span>\n            </div>\n          );\n        }\n      }\n      setThreadTopic(props.topic);\n    });\n    // setThreadTopic(props.topic);\n    unsubscribe();\n  }, [threadTopic]);\n  // }, []);\n\n  let listItemClassName;\n\n  if (comment.isDeleted) {\n    listItemClassName = \"deletedComponent userComment\";\n  } else if (editDeletText) {\n    listItemClassName = \"editableComment userComment\";\n  } else {\n    listItemClassName = \"userComment\";\n  }\n\n  return (\n    <li className={listItemClassName}>\n      <img\n        className=\"commentAvator\"\n        src={\n          !comment.userImageUrl || comment.isDeleted\n            ? NoProfile\n            : comment.userImageUrl\n        }\n        alt=\"comment_avator\"\n      ></img>\n      <div className=\"commentContent\">\n        <p className=\"commentData\">\n          <span className=\"commentNo\">No.{comment.commentNo}</span>\n          <span className=\"commentName\">{comment.userName}</span>\n          <span className=\"commentDate\">{comment.date}</span>\n          <span className=\"commentTime\">{comment.time}</span>\n        </p>\n        <div className=\"commentMessage\">\n          <p>{comment.message}</p>\n        </div>\n        {editDeletText}\n      </div>\n    </li>\n  );\n}\n\nexport default CommentListItem;\n\n    // <li\n    //   className={editDeletText ? \"editableComment userComment\" : \"userComment\"}\n    // >\n\n                  // <span className=\"editButton\">Edit</span> /{\" \"}\n\n","import { commentListSetUp, addNewComment, modifyComment } from './comment.actions';\n\nimport { firestore } from '../../firebase/firebase'\n\nexport const commentsInitiate = (collectionId) => {\n    return async (dispatch, getState) => {\n      const collectionRef = firestore.collection(collectionId);\n      let comments = [];\n\n      await collectionRef\n        .orderBy(\"commentNo\")\n        .get()\n        .then((snapshot) => {\n          snapshot.forEach((doc) => {\n            let comment = doc.data();\n            comment = {...comment, id: doc.id}\n            comments.push(comment);\n          });\n        });\n\n    //   console.log(comments);\n      dispatch(commentListSetUp(comments));\n    }\n}\n\nexport const addCommentToDatabase = (collectionId, comment, authId) => {\n    return async (dispatch, getState) => {\n      const collectionRef = firestore.collection(collectionId);\n\n      let newComment = comment;\n\n      // if (authId !== null) {\n        newComment = {...comment, userId: authId, isDeleted: false, commentedAt: new Date()}\n      // }\n\n      await collectionRef.add(newComment)\n\n      // dispatch(addNewComment(newComment));\n    }\n}\n\nexport const deleteComment = (collectionId, comment, ) => {\n  return async (dispatch, getState) => {\n      const collectionRef = firestore.collection(collectionId);\n\n      const newComment = {\n        ...comment,\n        deletedUserName: comment.userName,\n        deletedMessage: comment.message,\n        userName: \"Deleted\",\n        message: \"Deleted\",\n        isDeleted: true,\n        deletedAt: new Date(),\n      };\n\n      await collectionRef.doc(comment.id).set(newComment);\n\n      dispatch(modifyComment(newComment));\n  }\n}\n\n// ***********************************************\n// Update function moved to CommentList.comppnent\n// ***********************************************\n\n// export const commentsUpdate = (collectionId) => {\n//   return async (dispatch, getState) => {\n//     const collectionRef = firestore.collection(collectionId);\n\n//     const unsubscribe = await collectionRef\n//       .orderBy(\"commentNo\")\n//       .onSnapshot((snapshot) => {\n//         let changes = snapshot.docChanges();\n//         changes.forEach((change) => {\n//           if (change.type == \"added\") {\n//             let comment = change.doc.data();\n//             console.log(comment);\n//             comment = { ...comment, id: change.doc.id };\n//             dispatch(addNewComment(comment));\n//           } else if (change.type == \"remove\") {\n\n//           } else {\n\n//           }\n//         });\n//       });\n//     return unsubscribe;\n//   };\n// };\n\n","import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { commentsInitiate } from '../../redux/comment/comment.operations.js';\nimport { getCommentList } from '../../redux/comment/comment.selector.js';\nimport { addNewComment } from '../../redux/comment/comment.actions'\n\nimport CommentListItem from '../CommentListItem/CommentListItem.component';\n\nimport { firestore } from \"../../firebase/firebase\";\n\nimport './CommentList.styles.scss';\n\nconst CommentList = (props) => {\n  const dispatch = useDispatch();\n\n  const topic = props.topic;\n  const [commentList, setCommentList] = useState([])\n\n  const classNameForBackgroundImage = topic + \"BackGround\";\n\n  const state = useSelector((state) => state);\n  let stateCommentList = getCommentList(state);\n    // setCommentList(stateCommentList);\n\n  // useEffect( () => {\n  //   console.log('page-init')\n  //   dispatch(commentsInitiate(\"chat-\" + topic));\n  //   return () => setCommentList([]);\n  // },[]);\n\n  useEffect(()=> {\n    // console.log(\"page-init\");\n    dispatch(commentsInitiate(\"chat-\" + topic));\n\n    const collectionRef = firestore.collection(\"chat-\" + topic);\n\n    const unsubscribe = collectionRef\n      .orderBy(\"commentNo\")\n      .onSnapshot((snapshot) => {\n        let changes = snapshot.docChanges();\n        changes.forEach((change) => {\n          if (change.type == \"added\") {\n            let comment = change.doc.data();\n            // console.log(comment);\n            comment = { ...comment, id: change.doc.id };\n            dispatch(addNewComment(comment));\n            // setCommentList([...commentList, comment])\n\n            // const newCommentList = commentList;\n            // console.log(newCommentList);\n            // newCommentList.push(comment);\n            // setCommentList(newCommentList);\n\n            // const obj = document.querySelector(\".commentListWrapper\");\n            // obj.scrollIntoView(false);\n            // obj.scrollTop = obj.scrollHeight;\n          } else if (change.type == \"remove\") {\n            // delete comment action\n          } else {\n            // const comment = change.doc.data();\n            // console.log(comment);\n            // comments.push(comment);\n          }\n        });\n      });\n    return () => {\n      unsubscribe();\n      setCommentList([]);\n    };\n  }, [])\n\n  useEffect(() => {\n    setCommentList(stateCommentList);\n    console.log(stateCommentList);\n    const obj = document.querySelector(\".commentListWrapper\");\n    obj.scrollTop = obj.scrollHeight;\n\n    return () => setCommentList([]);\n  }, [stateCommentList]);\n\n    return (\n      <div className={\"commentListWrapper\" + \" \" + classNameForBackgroundImage}>\n        <ul className=\"commentList\">\n          {commentList.map((comment) => (\n            <CommentListItem\n              topic={\"chat-\" + topic}\n              key={comment.id}\n              comment={comment}\n            />\n          ))}\n        </ul>\n      </div>\n    );\n}\n\nexport default CommentList;","import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Icon from \"@material-ui/core/Icon\";\n\nconst useStyles = makeStyles((theme) => ({\n  button: {\n    margin: theme.spacing(1),\n  },\n}));\n\nexport default function IconLabelButton(props) {\n  const classes = useStyles();\n\n  return (\n    <Button\n      variant=\"contained\"\n      color=\"primary\"\n      style={{ background: \"#100c08\" }}\n      className={classes.button}\n      endIcon={props.icon !== null ? <Icon>{props.icon}</Icon> : null}\n      onClick={props.click}\n    >\n      {props.text}\n    </Button>\n  );\n}\n","import React, {useState, useEffect} from 'react';\nimport IconLabelButton from \"../IconLabelButton/IconLabelButton.component\";\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addCommentToDatabase } from '../../redux/comment/comment.operations.js';\nimport { userNameChange } from '../../redux/user/user.actions';\n\nimport { auth } from \"../../firebase/firebase\";\n\nimport './inputArea.styles.scss';\n\nconst InputArea = (props) => {\n    const dispatch = useDispatch();\n    const comments = useSelector(state => state.comments);\n    const userInfo = useSelector((state) => state.user.userInfo);\n    let newCommentNo = comments.commentList.length + 1;\n\n    const topic = props.topic;\n    \n    if (newCommentNo < 10) {\n      newCommentNo = \"000\" + newCommentNo;\n    } else if (newCommentNo < 100) {\n      newCommentNo = \"00\" + newCommentNo;\n    } else if (newCommentNo < 1000) {\n      newCommentNo = \"0\" + newCommentNo;\n    } \n    \n    const [userName, setUserName] = useState(\"Visitor\");\n    const [userIsLogin, setUserIsLogin] = useState(false);\n    const [userId, setUserId] = useState(null);\n\n    const [message, setMessage] = useState(\"\");\n    const [commentNo, setCommentNo] = useState(newCommentNo);\n\n\n    const nameChangeHandler = (event) => {\n        dispatch(userNameChange(event.target.value));\n        // console.log(\"change user name-1\");\n        setUserName(event.target.value);\n        // console.log(\"change user name-2\");\n    }\n    const messageChangeHandler = (event) => {\n        setMessage(event.target.value)\n    }\n    const submitComment = (event) => {\n      event.preventDefault();\n\n      // if (message === \"\") {\n      //     alert(\"Message Area is required!!!\")\n      //     return;\n      // }\n\n      let sendMessage = message;\n      let sendUserName = userName;\n\n      if (sendMessage === \"\") {\n        sendMessage = \"No Message\";\n      }\n      if (sendUserName === \"\") {\n        sendUserName = \"No Name\";\n      }\n\n      const month = new Date().getMonth() + 1;\n      const day = new Date().getDate();\n      const year = new Date().getFullYear();\n\n      const date = month + \"/\" + day + \"/\" + year;\n\n      const hours = new Date().getHours();\n      const mins = new Date().getMinutes() < 10\n              ? \"0\" + new Date().getMinutes()\n              : new Date().getMinutes()\n      \n      const time = hours + \":\" + mins\n\n      // if(userId) {\n      //   commentUserId = userInfo.authId;\n      // } else {\n      //   commentUserId = false;\n      // }\n\n      let userImageUrl;\n\n      if (userIsLogin) {\n        userImageUrl = userInfo.userImageUrl;\n      } else {\n        userImageUrl = null\n      }\n\n      dispatch(\n        addCommentToDatabase(\n          \"chat-\" + topic,\n          {\n            commentNo: commentNo,\n            date: date,\n            time: time,\n            userName: sendUserName,\n            message: sendMessage,\n            userImageUrl: userImageUrl\n          },\n          // userInfo.authId\n          // commentUserId\n          userId\n        )\n      );\n      // console.log(\"comment TEST\");\n      // setUserName(\"No Name\");\n      setMessage(\"\");\n    };\n\n    useEffect(()=>{\n        setCommentNo(newCommentNo);\n    },[comments])\n\n    // useEffect(() => {\n    //   if (!userInfo.isLogin) {\n    //     setUserName(userInfo.userName);\n    //   }\n    // });\n\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged(function (userAuth) {\n      if (userAuth) {\n        setUserName(userInfo.userName);\n        setUserId(userInfo.authId);\n        setUserIsLogin(true);\n      } else {\n        // setUserName(userInfo.userName);\n        // setUserName(\"Vistor\");\n        setUserId(null);\n        setUserIsLogin(false);\n      }\n    });\n\n    unsubscribe();\n\n    // return () => {\n    //   unsubscribe();\n    // };\n  }, [userInfo]);\n\n  useEffect(() => {\n\n  })\n\n    return (\n      <div className=\"inputAreaDiv\">\n        <form>\n          {userIsLogin ? (\n            <input\n              className=\"loginedUserNameInput\"\n              // onFocus={this.blur()}\n              readOnly=\"readonly\"\n              type=\"text\"\n              value={userName}\n            />\n          ) : (\n            <input\n              type=\"text\"\n              placeholder=\"Your Name\"\n              onChange={nameChangeHandler}\n              value={userName}\n            />\n          )}\n          <textarea\n            placeholder=\"Write message\"\n            onChange={messageChangeHandler}\n            value={message}\n            required\n          />\n          <IconLabelButton\n            text=\"send\"\n            icon=\"send\"\n            type=\"submit\"\n            click={submitComment}\n          />\n        </form>\n      </div>\n    );\n}\n\nexport default InputArea;","import React from \"react\";\n\nimport \"./Chat.styles.scss\";\n\nimport CommentList from \"../../components/CommentList/CommentList.component.jsx\";\nimport InputArea from \"../../components/InputArea/InputArea.component.jsx\";\n\nconst Chat = (props) => {\n    const topic = props.match.params.topic;\n    // console.log(topic);\n    \n    return (\n      <div className=\"Chat\">\n        <div className=\"pageStyle\">\n          <CommentList topic={topic} />\n          <InputArea topic={topic} />\n        </div>\n      </div>\n    );\n}\n\nexport default Chat;\n","import React from \"react\";\n\nimport \"./FormInput.styles.scss\";\n\nconst FormInput = ({ handleChange, label, ...otherProps }) => (\n  <div className=\"group\">\n    <input className=\"form-input\" onChange={handleChange} {...otherProps} />\n    {label ? (\n      <label\n        className={`${\n          otherProps.value.length ? \"shrink\" : \"\"\n        } form-input-label`}\n      >\n        {label}\n      </label>\n    ) : null}\n  </div>\n);\n\nexport default FormInput;\n","import React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\n\nimport FormInput from \"../FormInput/FormInput.component\";\nimport IconLabelButton from '../IconLabelButton/IconLabelButton.component';\n\nimport { auth } from \"../../firebase/firebase\";\nimport { useHistory } from \"react-router-dom\";\n\nimport { createUserProfileDocument } from \"../../redux/user/user.operations\";\nimport { userLoginSignup } from \"../../redux/user/user.actions\";\n\n\n\nimport \"./LoginInputArea.styles.scss\";\n\nconst Login = () => {\n  const [userCredentials, setCredentials] = useState({\n    email: \"\",\n    password: \"\",\n  });\n\n  const dispatch = useDispatch();\n\n  const history = useHistory();\n\n  const { email, password } = userCredentials;\n\n  // useEffect(() => {\n  //   const unsubscribe = auth.onAuthStateChanged(function (userAuth) {\n  //     if (userAuth) {\n  //       history.push(\"/redux-exercise/\");\n  //     }\n  //   });\n  //   return () => unsubscribe();\n  // });\n\n  const loginHandleSubmit = async (event) => {\n    event.preventDefault();\n\n    if ( !email || !password ) {\n        alert(\"Please fill in all fields\");\n        return;\n    }\n\n    try {\n      await auth.signInWithEmailAndPassword(email, password);\n      setCredentials({\n        email: \"\",\n        password: \"\",\n      });\n\n      await auth.onAuthStateChanged(async (userAuth) => {\n        if (userAuth) {\n          const userRef = await createUserProfileDocument(userAuth);\n          \n          userRef.onSnapshot((snapShot) => {\n            dispatch(\n              userLoginSignup(\n                {\n                  userName: snapShot.data().userName,\n                  authId: snapShot.id,\n                  isLogin: true\n                }\n              )\n            )\n          });\n        }});\n\n        history.push(\"/redux-exercise/\");\n\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleChange = (event) => {\n    const { value, name } = event.target;\n\n    setCredentials({ ...userCredentials, [name]: value });\n  };\n\n  return (\n    <div className=\"loginInputArea\">\n      <form>\n        <FormInput\n          name=\"email\"\n          type=\"email\"\n          value={email}\n          handleChange={handleChange}\n          label=\"Email\"\n          required\n        />\n        <FormInput\n          name=\"password\"\n          type=\"password\"\n          value={password}\n          handleChange={handleChange}\n          label=\"Password\"\n          required\n        />\n\n        <div className=\"buttons\">\n          <IconLabelButton click={loginHandleSubmit} text=\"Login\" icon={null} />\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default Login;","import React from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport LoginInputArea from '../../components/LoginInputArea/LoginInputArea.component';\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faHandPointLeft } from \"@fortawesome/free-solid-svg-icons\";\n\nimport { loginWithGoogleAccount } from '../../redux/user/user.operations.js';\n\nimport { useHistory } from 'react-router-dom';\n\nimport \"./Login.styles.scss\";\n\nconst Login = () => {\n\n    const history = useHistory();\n    const dispatch = useDispatch();\n\n    // useEffect(()=>{\n    //   const unsubscribe = auth.onAuthStateChanged(function (userAuth) {\n    //     if (userAuth) {\n    //       history.push(\"/redux-exercise/\");\n    //     } \n    //   });\n    //   return () => unsubscribe();\n    // })\n\n    const loginWithGoogleAccountBackToHome = async() => {\n        const result = await dispatch(loginWithGoogleAccount());\n        if (result) {\n          setTimeout(() => {\n            history.push(\"/redux-exercise/\");\n          }, 500);\n        } else {\n            return;\n        }\n    }\n\n    return (\n      <div className=\"loginPageDiv\">\n        <div className=\"loginPageBody\">\n          <h2>Login</h2>\n          <p>\n            Login with your Email Address or\n            <br />\n            <span\n              className=\"googleAccount\"\n              // onClick={dispatch(loginWithGoogleAccount)}\n              onClick={loginWithGoogleAccountBackToHome}\n            >\n              Google Account\n            </span>\n            &nbsp;\n            <FontAwesomeIcon icon={faHandPointLeft} />\n          </p>\n          <p>\n            If you don't have your account yet,\n            <br />\n            <span\n              className=\"pleaseSignup\"\n              onClick={() => history.push(\"/redux-exercise/signup\")}\n            >\n              please Signup\n            </span>\n            &nbsp;\n            <FontAwesomeIcon icon={faHandPointLeft} />\n          </p>\n          <LoginInputArea />\n        </div>\n      </div>\n    );\n}\n\nexport default Login;","import React, { useState, useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\"\n\nimport FormInput from \"../FormInput/FormInput.component\";\nimport IconLabelButton from '../IconLabelButton/IconLabelButton.component';\n\nimport { createNewAccountWithEmail } from '../../redux/user/user.operations';\n\nimport { useHistory } from \"react-router-dom\";\n\nimport \"./SigninInputArea.styles.scss\";\n\nconst Signup = () => {\n  const [userCredentials, setCredentials] = useState({\n    userName: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPass: \"\"\n  });\n\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const { userName, email, password, confirmPass } = userCredentials;\n\n  // useEffect(() => {\n  //   const unsubscribe = auth.onAuthStateChanged(function (userAuth) {\n  //     if (userAuth) {\n  //       history.push(\"/redux-exercise/\");\n  //     }\n  //   });\n  //   return () => unsubscribe();\n  // });\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n\n    if (!userName || !email || !password || !confirmPass) {\n      alert(\"Please fill in all fields\");\n      return;\n    }\n\n    if ( password.length < 6 ) {\n      alert(\"Password should be 6 or more characters\");\n      return;\n    }\n\n    if (password !== confirmPass) {\n      alert(\"Passwords don't match\");\n      return;\n    }\n\n    try {\n      await dispatch(createNewAccountWithEmail(userName, email, password));\n      setCredentials({\n        userName: \"\",\n        email: \"\",\n        password: \"\",\n        confirmPass: \"\",\n      });\n\n      history.push(\"/redux-exercise/\");\n\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleChange = (event) => {\n    const { value, name } = event.target;\n\n    setCredentials({ ...userCredentials, [name]: value });\n  };\n\n  useEffect(()=> {\n    console.log(userCredentials);\n  })\n\n  return (\n    <div className=\"loginInputArea\">\n      <form>\n        <FormInput\n          name=\"userName\"\n          type=\"text\"\n          value={userName}\n          handleChange={handleChange}\n          label=\"Name\"\n          required\n        />\n        <FormInput\n          name=\"email\"\n          type=\"email\"\n          value={email}\n          handleChange={handleChange}\n          label=\"Email\"\n          required\n        />\n        <FormInput\n          name=\"password\"\n          type=\"password\"\n          value={password}\n          handleChange={handleChange}\n          label=\"Password\"\n          required\n        />\n        <FormInput\n          name=\"confirmPass\"\n          type=\"password\"\n          value={confirmPass}\n          handleChange={handleChange}\n          label=\"Confirm Password\"\n          required\n        />\n\n        <div className=\"buttons\">\n          <IconLabelButton\n            text=\"Signup\"\n            icon={null}\n            click={handleSubmit}\n          />\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default Signup;","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\n\nimport SignupInputArea from '../../components/SignupInputArea/SignupInputArea.component';\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faHandPointLeft } from \"@fortawesome/free-solid-svg-icons\";\n\nimport { loginWithGoogleAccount } from \"../../redux/user/user.operations.js\";\n\nimport { useHistory } from \"react-router-dom\";\n\nimport \"./Signup.styles.scss\";\n\nconst Signup = () => {\n    const history = useHistory();\n    const dispatch = useDispatch();\n\n    // useEffect(() => {\n    //   const unsubscribe = auth.onAuthStateChanged(function (userAuth) {\n    //     if (userAuth) {\n    //       setTimeout(() => {\n    //         history.push(\"/redux-exercise/\");\n    //       }, 1000);\n    //     }\n    //   });\n    //   return () => unsubscribe();\n    // });\n\n    const loginWithGoogleAccountBackToHome = async () => {\n      const result = await dispatch(loginWithGoogleAccount());\n      if (result) {\n          setTimeout(() => {\n            history.push(\"/redux-exercise/\");\n          }, 500);\n      } else {\n        return;\n      }\n    };\n\n    return (\n      <div className=\"signupPageDiv\">\n        <div className=\"signupPageBody\">\n          <h2>Signup</h2>\n          <p>\n            Signup with your Email Address or\n            <br />\n            <span\n              className=\"googleAccount\"\n              onClick={loginWithGoogleAccountBackToHome}\n            >\n              Google Account\n            </span>\n            &nbsp;\n            <FontAwesomeIcon icon={faHandPointLeft} />\n          </p>\n          <SignupInputArea />\n        </div>\n      </div>\n    );\n}\n\nexport default Signup;","import React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport IconLabelButton from '../../components/IconLabelButton/IconLabelButton.component';\n\nimport { getUserInfo } from \"../../redux/user/user.selector.js\";\nimport { nameUpdateInDatabase } from '../../redux/user/user.operations';\n\n// import { auth, firestore, storage } from \"../../firebase/firebase\";\n\nimport \"./Profile.styles.scss\";\n\nconst Profile = (props) => {\n  const [userInfo, setUserInfo] = useState({\n    userName: \"Visitor\",\n    authId: null,\n    isLogin: false,\n    userImageUrl:\n      \"https://firebasestorage.googleapis.com/v0/b/chat-app-8976e.appspot.com/o/no_profile.png?alt=media&token=ab1a24c8-e687-4485-915c-e8b3da6d1738\",\n  });\n\n  const state = useSelector((state) => state);\n  const userInfoInStore = getUserInfo(state);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    setUserInfo(userInfoInStore);\n    console.log(userInfoInStore);\n  }, [userInfoInStore]);\n\n  const nameChangeHandler = (event) => {\n    setUserInfo({\n        ...userInfo,\n        userName:event.target.value\n    });\n  };\n\n  const nameUpdate = (event) => {\n      event.preventDefault();\n      dispatch(nameUpdateInDatabase(userInfo.userName, userInfo.authId));\n  }\n\n  useEffect(() => {\n    console.log(userInfo.userName);\n  }, [userInfo.userName]);\n\n\n  return (\n    <div className=\"profilePageDiv\">\n      <div className=\"profilePageBody\">\n        <label className=\"chooseProfileImage\" htmlFor=\"avatar\">\n          <img\n            className=\"profileImage\"\n            src={userInfo.userImageUrl}\n            alt=\"profile_image\"\n          ></img>\n        </label>\n        <input\n          type=\"file\"\n          id=\"avatar\"\n          name=\"avatar\"\n          accept=\".png, .jpg, .jpeg\"\n        ></input>\n        <div className=\"displayNameChangeDiv\">\n          <label htmlFor=\"displayNameInput\" className=\"displayNameLabel\">\n            Display Name\n          </label>\n          <input\n            id=\"displayNameInput\"\n            className=\"displayName\"\n            value={userInfo.userName}\n            onChange={nameChangeHandler}\n          ></input>\n          <br />\n          <IconLabelButton\n            text=\"Profile Update\"\n            icon=\"autorenew\"\n            click={nameUpdate}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Profile;\n","import React, { useState, useEffect } from \"react\";\n\nimport { useDispatch } from 'react-redux';\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faUserCircle } from \"@fortawesome/free-solid-svg-icons\";\n\n\nimport { useHistory } from 'react-router-dom';\n\nimport { auth } from '../../firebase/firebase.js';\nimport { userLogout } from '../../redux/user/user.actions.js';\n\nimport './ButtonAppBar.styles.scss'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    position: \"fixed\",\n    width: \"100%\",\n    zIndex: 100\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n    fontFamily: \"'Dancing Script', cursive\",\n    fontWeight: 600,\n    fontSize: \"2rem\"\n  },\n}));\n\nexport default function ButtonAppBar() {\n    const [headerText, setheaderText] = useState(\"Chat Place\");\n    const [userIsLogin, setUserIsLogin] = useState(false);\n\n    const dispatch = useDispatch();\n    // const state = useSelector(state => state);\n    // const user = state.user.userInfo;\n\n    const classes = useStyles();\n\n    auth.onAuthStateChanged(function (userAuth) {\n      if (userAuth) {\n        setUserIsLogin(true);\n        // console.log(user);\n      } else {\n        setUserIsLogin(false);\n      }\n    });\n\n    const history = useHistory();\n\n    useEffect(() => {\n      return history.listen((location) => {\n        let topic = location.pathname;\n\n        if (\n          topic === \"/redux-exercise\" ||\n          topic === \"/redux-exercise/\" ||\n          topic === \"/\" ||\n          topic === \"\"\n        ) {\n          topic = \"Chat Place\";\n        } else {\n          topic = topic.slice(topic.lastIndexOf(\"/\") + 1);\n        }\n        // console.log(topic);\n        setheaderText(topic);\n      });\n    });\n\n    // useEffect(()=>{\n    //   auth.onAuthStateChanged(function (user) {\n    //     if (user) {\n    //       userIsLogin = true;\n    //     } else {\n    //       userIsLogin = false;\n    //     }\n    //   });\n    // })\n\n  let rightSideLink;\n\n  if (userIsLogin && headerText === \"profile\") {\n    rightSideLink = (\n      <Button\n        color=\"inherit\"\n        onClick={() => {\n          auth.signOut();\n          dispatch(userLogout());\n          history.push(\"/redux-exercise/\");\n        }}\n      >\n        Logout\n      </Button>\n    );\n  } else if (userIsLogin && headerText !== \"profile\") {\n    rightSideLink = (\n      <Button\n        color=\"inherit\"\n        style={{\n          justifyContent: \"flex-end\"\n        }}\n        onClick={() => history.push(\"/redux-exercise/profile\")}\n      >\n        <FontAwesomeIcon className=\"profileIcon\" icon={faUserCircle} />\n      </Button>\n    );\n  } else {\n    rightSideLink = (\n      <Button\n        color=\"inherit\"\n        onClick={() => history.push(\"/redux-exercise/login\")}\n      >\n        Login\n      </Button>\n    );\n  }\n\n    return (\n      <div className={classes.root}>\n        <AppBar position=\"static\" style={{ background: \"#100c08\" }}>\n          <Toolbar>\n            {headerText !== \"Chat Place\" ? (\n              <IconButton\n                edge=\"start\"\n                className={classes.menuButton}\n                color=\"inherit\"\n                aria-label=\"menu\"\n                onClick={() => history.push(\"/redux-exercise/\")}\n              >\n                <MenuIcon />\n              </IconButton>\n            ) : (\n              <IconButton\n                edge=\"start\"\n                className={classes.menuButton}\n                style={{\n                  color: \"#100c08\",\n                  cursor: \"inherit\",\n                }}\n                aria-label=\"menu\"\n              >\n                <MenuIcon />\n              </IconButton>\n            )}\n            <Typography variant=\"h6\" className={classes.title}>\n              {headerText}\n            </Typography>\n            {rightSideLink}\n          </Toolbar>\n        </AppBar>\n      </div>\n    );\n}\n\n            // {\n            //   userIsLogin ? (\n            //     <Button\n            //       color=\"inherit\"\n            //       onClick={() => {\n            //         auth.signOut();\n            //         dispatch(userLogout());\n            //       }}\n            //     >\n            //       Logout\n            //     </Button>\n            //   ) : (\n            //     <Button\n            //       color=\"inherit\"\n            //       onClick={() => history.push(\"/redux-exercise/login\")}\n            //     >\n            //       Login\n            //     </Button>\n            //   );\n            // }\n\n","import React from 'react';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faLinkedin, faGithub } from \"@fortawesome/free-brands-svg-icons\";\nimport { faMailBulk } from \"@fortawesome/free-solid-svg-icons\";\n\nimport './Footer.style.scss';\n\nconst Footer = () => {\n    return (\n      <footer className=\"pageFooter\">\n        <div className=\"nameAndCopyDiv\">\n          <p className=\"footerCopyright\">\n            &copy; 2020 Tomohiro Yoshida. All Rights Reserved\n          </p>\n        </div>\n\n        <ul className=\"contactList\">\n          <li className=\"linkedinItem\">\n            <a href=\"https://www.linkedin.com/in/tomohiro-yoshida-a8320816a/\">\n              <FontAwesomeIcon icon={faLinkedin} />\n            </a>\n          </li>\n          <li className=\"githubItem\">\n            <a href=\"https://github.com/TOMO-YOSHI\">\n              <FontAwesomeIcon icon={faGithub} />\n            </a>\n          </li>\n          <li className=\"mailItem\">\n            <a href=\"mailto: tyoshida01@mylangara.ca\">\n              <i class=\"fas fa-envelope\"></i>\n            </a>\n          </li>\n        </ul>\n      </footer>\n    );\n}\n\nexport default Footer;\n\n        //   <p className=\"authorName\">Author: Tomohiro Yoshida</p>\n        //   <p className=\"footerCopyright\">\n        //     &copy; 2020 Chat Place. All Rights Reserved\n        //   </p>\n","import React, { useEffect} from 'react';\nimport './App.css';\nimport { Route, Switch } from \"react-router-dom\";\nimport { useDispatch } from 'react-redux'\nimport { auth } from './firebase/firebase';\nimport { createUserProfileDocument } from './redux/user/user.operations';\nimport { userLoginSignup, userInitialize } from './redux/user/user.actions';\n\nimport Home from './pages/Home/Home.page.jsx';\nimport Chat from './pages/Chat/Chat.page.jsx';\nimport Login from './pages/Login/Login.page.jsx';\nimport Signup from './pages/Signup/Signup.page.jsx';\nimport Profile from './pages/Profile/Profile.page.jsx';\n\nimport ButtonAppBar from './components/ButtonAppBar/ButtonAppBar.component.jsx';\nimport Footer from './components/Footer/Footer.component.jsx'\n\nfunction App() {\n    const dispatch = useDispatch();\n    // const state = useSelector(state => state);\n    // const [userInfo, setUserInfo] = useState({\n    //   userInfo: {\n    //     userName: \"Visitor\",\n    //     authId: null,\n    //     isLogin: false,\n    //   },\n    // });\n\n    useEffect(() => {\n      const unsubscribeFromAuth = \n      auth.onAuthStateChanged(async (userAuth) => {\n        if (userAuth) {\n          const userRef = await createUserProfileDocument(userAuth);\n          \n          setTimeout(() => {\n            userRef.get().then(async (snapshot) => {\n              console.log(snapshot.data());\n              // console.log(userRef);\n              // const userName = await snapshot.data().userName;\n              // const userImageUrl = await snapshot.data().userImageUrl;\n              const { userName, userImageUrl} = await snapshot.data();\n              dispatch(\n                userLoginSignup({\n                  userName: userName,\n                  authId: userRef.id,\n                  isLogin: true,\n                  userImageUrl: userImageUrl,\n                })\n              );\n            });\n          }, 500);\n\n        } else {\n          dispatch(userInitialize());\n        }\n      });\n      return () => {\n        unsubscribeFromAuth();\n      };\n    }, [userLoginSignup]);\n\n    // useEffect(()=>{\n    //   console.log(state.user.userInfo);\n    // })\n\n  return (\n    <div className=\"App\">\n      <ButtonAppBar />\n      <Switch>\n        <Route exact path=\"/redux-exercise\" component={Home} />\n        <Route path=\"/redux-exercise/chat/:topic\" component={Chat} />\n        <Route path=\"/redux-exercise/login\" component={Login} />\n        <Route path=\"/redux-exercise/signup\" component={Signup} />\n        <Route path=\"/redux-exercise/profile\" component={Profile} />\n      </Switch>\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","export const addCommentToList = (commentList, newComment) => {\n    const exsistingComment = \n    commentList.find(comment => \n        comment.id === newComment.id);\n\n    if(exsistingComment) {\n        return [...commentList];\n    }\n\n    return [...commentList, newComment];\n};\n\nexport const modifyComment = (commentList, newComment) => {\n  const exsistingCommentIndex = commentList.findIndex(\n    (comment) => comment.id === newComment.id\n  );\n\n  if (exsistingCommentIndex) {\n    commentList[exsistingCommentIndex] = newComment;\n    return [...commentList];\n  }\n\n  return [...commentList];\n};","import { commentActionTypes } from \"./comment.actions\";\nimport { modifyComment, addCommentToList } from \"./comment.utils\";\n\nconst INITIAL_STATE = {\n  commentList: [\n    // {\n      // commentNo: \"0000\",\n      // userName: \"TOMO\",\n      // date: \"09/22/2020\",\n      // time: \"00:00\",\n      // message: [\n        // `Welcome to \"Chatting Place\"!!`,\n        // `Hi, I'm Tomo, I developed this chat app!!`,\n      // ],\n    // },\n  ],\n};\n\nconst commentReducer = (state = INITIAL_STATE, action) => {\n    switch (action.type) {\n      case commentActionTypes.COMMENTLIST_SETUP:\n        return {\n          ...state,\n          commentList: action.payload,\n        };\n      case commentActionTypes.ADD_NEWCOMMENT:\n        return {\n          ...state,\n          // commentList: [...state.commentList, action.payload],\n          commentList: addCommentToList(state.commentList, action.payload),\n        };\n      case commentActionTypes.MODIFY_COMMENT:\n        return {\n          ...state,\n          commentList: modifyComment(state.commentList, action.payload),\n        };\n      default:\n        return state;\n    }\n}\n\nexport default commentReducer;","import { userActionTypes } from './user.actions';\n\nconst INITIAL_STATE = {\n  userInfo: {\n    userName: \"Visitor\",\n    authId: null,\n    isLogin: false,\n    userImageUrl:\n      \"https://firebasestorage.googleapis.com/v0/b/chat-app-8976e.appspot.com/o/no_profile.png?alt=media&token=ab1a24c8-e687-4485-915c-e8b3da6d1738\",\n  },\n};\n\nconst userReducer = (state = INITIAL_STATE, action) => {\n    switch (action.type) {\n      case userActionTypes.USER_LOGIN_SIGNUP:\n        return {\n          ...state,\n          userInfo: action.payload,\n        };\n      case userActionTypes.USERNAME_CHANGE:\n        return {\n          ...state,\n          userInfo: {\n            ...state.userInfo,\n            userName: action.payload,\n          },\n        };\n      case userActionTypes.USER_LOGOUT:\n        return state;\n      case userActionTypes.USER_IMAGE_GET:\n        return {\n          ...state,\n          userInfo: {\n            ...state.userInfo,\n            userImageUrl: action.payload,\n          },\n        };\n      default:\n        return state;\n    }\n}\n\nexport default userReducer;\n\n\n","import { combineReducers } from 'redux';\n\nimport commentReducer from './comment/comment.reducer';\nimport userReducer from './user/user.reducer';\n\n\nexport const rootReducer = combineReducers({\n    comments: commentReducer,\n    user: userReducer\n});\n\n// export default rootReducer;","import { createStore, applyMiddleware } from 'redux';\n\nimport { rootReducer } from './root-reducer';\n\n// import logger from \"redux-logger\";\nimport thunk from \"redux-thunk\";\n\nconst middlewares = [thunk];\n\n\nconst store = createStore(rootReducer, applyMiddleware(...middlewares));\n\nexport { store };","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport { Provider } from 'react-redux';\nimport { store } from './redux/store'\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/no_profile.b6681619.png\";"],"sourceRoot":""}